# ENVIRONMENT

export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
export MONGO_HOME=/usr/local/mongodb
export MYSQL_HOME=/usr/local/mysql
export REDIS_HOME=/usr/local/redis
export RVM_HOME=~/.rvm
export TOMCAT_HOME=/usr/local/tomcat
export POSTGRES_HOME=/Applications/Postgres.app/Contents/Versions/9.4

export PATH=${PATH}:${JAVA_HOME}/bin:${MONGO_HOME}/bin:${MYSQL_HOME}/bin:${REDIS_HOME}/src:${TOMCAT_HOME}/bin:${RVM_HOME}/bin:${POSTGRES_HOME}/bin

export EDITOR=/usr/local/bin/sublime
export GIT_EDITOR=/usr/bin/vim

# RUBY

source ~/.rvm/scripts/rvm

# ALIAS

alias ...='cd ../..'
alias ..='cd ..'
alias .='cd .'
alias cap='bundle exec cap'
alias capfull='git push && git push --tags && bundle exec cap production deploy && cap production db:migrate && cap production db:seed'
alias capush='git push && git push --tags && bundle exec cap production deploy'
alias chrome='open /Applications/Google\ Chrome.app'
alias cls='clear'
alias dev='cd ~/Development'
alias firefox='open /Applications/Firefox.app'
alias folders='ls -Gal | grep ^d'
alias hclear='history -c'
alias hide_files='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder'
alias ip='curl ifconfig.me'
alias kill='kill -9'
alias killnautilus='killall -9 nautilus'
alias la='ls -lah'
alias ports='sudo lsof -i -n -P'
alias psj='jps -l'
alias psx='ps aux | grep'
alias sb='sublime'
alias show_files='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder'
alias speedup='sudo find /private/var/log/asl/* -mtime +5 -exec rm -rf {} \;'
alias ss='open /System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app'
alias upgrade='sudo apt-get update && sudo apt-get upgrade && sudo apt-get clean'
alias work='cd ~/workspace'

## GIT

alias describe='git describe'
alias fetch='git fetch --all; git fetch --tag'
alias ga='git add -A && git commit -m'
alias gb='git branch'
alias gc='git commit'
alias gd='git difftool -y -x "sdiff" | less'
alias gg='gitg &'
alias gk='git checkout'
alias gl="git log --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(cyan  )<%an>%Creset' --abbrev-commit"
alias gm='git merge'
alias gs='git status -sb'
alias master='git checkout master'
alias pop='git stash pop'
alias pull='git pull'
alias push='git push && git push --tags'
alias rebase...='git rebase --continue'
alias rebase='git add -A && git stash && git pull --rebase'
alias remote='git config remote.origin.url'
alias stash='git add -A && git stash'

## JS

alias hbs='gulp templates'

merge_theirs() {
  BRANCH=$1

  git merge --strategy recursive -X theirs $BRANCH
}

tag() {
  git tag -a "${1}" -m "${1}"

  echo "Now your project is on version '`git describe`'"
}

tag_remove() {
  git tag -d "${1}" && git push origin ":refs/tags/${1}"

  echo "Removed tag ${1}. Now your project is on version '`git describe`'"
}

## RUBY

alias be='bundle exec'
alias bi='bundle install'
alias bu='bundle update'
alias cucumber='bundle exec cucumber'
alias migrate='rake db:drop:all && rake db:create:all && rake db:migrate && rake db:test:prepare'
alias rc='rails c'
alias route='rake routes | grep'
alias rs='rails s'
alias rsp='rails s -p 3001'
alias rspec='bundle exec rspec'
alias seed='rake db:seed'
alias spec='bundle exec rspec spec'

g() {
  if [ -z "${1}" ]; then
    cd ~/workspace/${1}
  fi

  bundle exec guard
}

## JS

alias jasmine='node_modules/jasmine-node/bin/jasmine-node --forceexit'
alias jasmine2='node_modules/jasmine-node/bin/jasmine-node --forceExit'

go() {
  cd ~/workspace/${1}
}

# PROMPT

prompt() {
  local CYAN="\[\033[0;36m\]"
  local LIGHT_GREEN="\[\033[1;32m\]"
  local NO_COLOR="\[\e[0m\]"
  local YELLOW="\[\033[0;33m\]"

  local BRANCH=`git branch 2> /dev/null | grep \* | sed 's/* //'`
  local RUBY_VERSION=$(~/.rvm/bin/rvm-prompt v)

  PS1="${CYAN}\w\a${NO_COLOR} (${RUBY_VERSION}) ${LIGHT_GREEN}[${BRANCH}]\n${YELLOW}\$ ${NO_COLOR}"
}

PROMPT_COMMAND=prompt

reload() {
  BASHRC=~/.bashrc
  BASH_PROFILE=~/.bash_profile

  [ -f $BASHRC ]       && source $BASHRC
  [ -f $BASH_PROFILE ] && source $BASH_PROFILE
}

# METHODS

clone() {
  git clone git@github.com:${1}/${2}
}

keygen() {
  KEY_PATH=~/.ssh/"${1}"
  EMAIL=${2}

  ssh-keygen -t rsa -b 4096 -f $KEY_PATH -C $2
  chmod 600 $KEY_PATH
  ssh-add $KEY_PATH
  cat "${KEY_PATH}.pub"
}

# JOB

source ~/.job
